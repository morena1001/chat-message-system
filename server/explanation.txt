/create-account : 
    POST
    Body : 
        email [ email of the new account ] [ string ]
        username [ username of the new account ] [ string ]
        password [ password of the new account ] [ string ]
    
    A new account is created if the email and username given is unique.



/read-email : 
    GET
    Body : 
        id [ id of the user whose email is to be viewed ] [ number ] { optional if using username }
        username [ username of the user whose email is to be viewed ] { optional if using id }
    
    Returns the email of the user requested



/read-user-id :
    GET
    Body :
        username [ username of the user whose id is to be viewed ] [ string ] { optional if using email }
        email [ email of the user whose id is to be viewed ] [ string ] { optional if using username }
    
    Returns the id of the user with given username or email



/read-username :
    GET
    Body : 
        id [ id of the user whose username is to be viewed] [ number ] { optional if using the email }
        email [ email of the user whose username is to be viewed ] [ string ] { optional if using the id }

    Returns the username of the user requested



/update-email : 
    PUT
    Body : 
        id [ id of the user ] [ number ] { optional if using either username or email }
        username [ username of the user ] [ string ] { optional if using either id or email }
        email [ email of the user ] [ string ] { optional if using either id or username }
        password [ password of the user who is updating their email ] [ string ]
        newEmail [ the new email to be used ] [ string ]
    
    Updates the email of the user provided that the password given matches the user's password



/update-username : 
    PUT
    Body : 
        id [ id of the user ] [ number ] { optional if using either username or email}
        username [ username of the user ] [ string ] { optional if using either id or email }
        email [ email of the user ] [ string ] { optional if using either id or username }
        password [ password of the user who is updating their email ] [ string ]
        newUsername [ the new email to be used ] [ string ]

    Updates the username of the user provided that the password given matches the user's password



/update-password : 
    PUT
    Body : 
        id [ id of the user ] [ number ] { optional if using either username or email}
        username [ username of the user ] [ string ] { optional if using either id or email }
        email [ email of the user ] [ string ] { optional if using either id or username }
        password [ password of the user who is updating their email ] [ string ]
        newPassword [ the new email to be used ] [ string ]

    Updates the password of the user provided that the password given matches the user's password



/delete-user : 
    DELETE
    Body : 
        id [ id of the user ] [ number ] { optional if using either username or email}
        username [ username of the user ] [ string ] { optional if using either id or email }
        email [ email of the user ] [ string ] { optional if using either id or username }
        password [ password of the user who is updating their email ] [ string ]

    Updates the password of the user provided that the password given matches the user's password



/create-group : 
    POST
    Body : 
        username [ username of the user creating the chat ] [ string ]
        usernames [usernames of members of the chat] [ list ]
        name [ name of the chat ] [ string ]
        individual [ If true, the group is assumed individual rather than a group chat ] [ boolean ]

    Creates a group based on the information given. By default, the id is immutable and the list of admins is mutable. If individual is false, 
    the list of members, and the name is mutable, otherwise, these values will not change.



/read-members : 
    GET
    Body :     
        id [ id of the chat the user wants to view the information from ] [ number ]

    Returns the members of the group



/read-name :
    GET
    Body : 
        userId [ id of the user who wants to view the information ] [ number ]
        groupId [ id of the chat the user wants to view the information from ] [ number ]

    Return the name of the group. If the group is an individual chat, it returns the other user of the chat, else it returns the name.



/read-admins : 
    GET
    Body : 
        id [ id of the chat the user wants to view the information from ] [ number ]

    Returns the admins of the specified group.



/read-group-id :
    GET
    Body : 
        name [ name of the chat the user wants to view the information from ] [ string ]

    Returns all the possible id of the groups whose name match the name given in the body



/read-group-info : 
    GET
    Body : 
        id [ id of the group chat ] [ number ]

    Returns all of the information regarding the group with the id



/join-group :
    PUT
    Body : 
        userId [ id of the user that want to join a chat ] [ number ]
        groupId [ id of the chat the user wants to join ] [ number ]

    Updates the list of members in the specific group resource, as well as add a new resource to members



/leave-group : 
    PUT
    Body : 
        userId [ id of the user that wants to leave a chat] [ number ]
        groupId [ id of the chat the user wants to leave] [ number ]

    Removes the specified member from the group, as well as delete the corresponding resource from the members resource list



/update-name : 
    PUT
    Body : 
        userId [ id of the user that wants to update the name of a chat ] [ number ] 
        groupId [ id of the chat that will have its name updated ] [ number ]
        newName [ the new name for the group chat ] [ string ]

    Updates the name of a group chat if it is not an individual chat and if the user is an admin of the group chat



/add-admin : 
    PUT
    Body : 
        userId [ id of the user that wants to make another user an admin ] [ number ]
        otherUserId [ id of the user to be made an admin ] [ number ]
        groupId [ id of the chat that the otherUser will become an admin of ] [ number ]

    Adds an admin to the specified group. Only an admin of a group can promote admins



/delete-group : 
    DELETE
    Body : 
        userId [ id of the user that wants to delete a group chat ] [ number ]
        groupId [ id of the chat that will be deleted ] [ number ]

    The chat gets deleted if the user is an admin of the chat, along with the messages



/read-users : 
    GET
    Body : 
        id [ id of the group that a user wants to see the members of ] [ number ]

    Redirects to /read-members



/read-groups : 
    GET
    Body : 
        id [ id of a user that another user will see the groups it has joined ] [ number ]

    Returns the groups that the given user has joined



/create-message : 
    POST
    Body : 
        userId [ id of the user creating the message ] [ number ]
        groupId [ id of the group where the message was posted ] [ number ]
        content [ the content of the message ] [ string ]
    
    Creates a new message



/read-message-id : 
    GET
    Body : 
        userId [ id of the user who sent the message ] [ number ] { optional if using groupId }
        groupId [ id of the group where the message was sent ] [ number ] { optional if using userId }
        content [ partial or complete part of the message ] [ string ] { optional }

    Returns all the messages that fit the information given



/read-message-sender : 
    GET 
    Body : 
        id [ id of the message ] [ number ]

    Returns the sender of the message specified



/read-message-group-origin :
    GET
    Body : 
        id [ id of the message ] [ number ]

    Returns the group id where the message was sent



/read-message-content : 
    GET
    Body : 
        id [ id of the message ] [ number ]

    Returns the group content of the message specified



/read-message-date-sent : 
    GET
    Body : 
        id [ id of the message ] [ number ]

    Returns the date that the specified message was sent



/read-user-messages :
    GET
    Body : 
        id [ id of the user] [ number ]

    Returns all of the messages sent by the specified user



/read-chat-messages : 
    GET
    Body :
        id [ id of the chat ] [ number ]

    Returns all of the messages sent in a chat



/read-latest-message : 
    GET
    Body : 
        id [ id of the group where the message was sent ] [ number ]

    Returns the most recent message sent in a group chat



/update-message-content : 
    PUT 
    Body : 
        messageId [ id of the message] [ number ]
        userId [ id of the user that created the message ] [ number ]
        password [ password of the user that created the message ] [ string ]
        newContent [ the edited content of the message ] [ string ]

    Updates the specified message, as well as its date sent



/delete-message : 
    DELETE
    Body : 
        messageId [ id of the message] [ number ] 
        userId [ id of the user that created the message ] [ number ]
        password [ password of the user that created the message ] [ string ]

    Delete the specified message
